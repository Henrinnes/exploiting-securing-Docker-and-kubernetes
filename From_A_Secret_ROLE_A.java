package from_a_secret;

import anbxj.AnBx_Debug;
import anbxj.AnBx_Layers;
import anbxj.AnBx_Params;
import anbxj.AnB_Protocol;
import anbxj.AnB_Session;
import anbxj.Crypto_KeyStoreType;
import anbxj.Crypto_ByteArray;
import anbxj.Crypto_HmacPair;
import anbxj.Crypto_SealedPair;
import anbxj.Crypto_KeyPair;

import java.security.KeyPair;
import java.security.PublicKey;
import java.security.SignedObject;
import javax.crypto.SealedObject;
import javax.crypto.SecretKey;
import javax.crypto.spec.DHParameterSpec;

import java.util.Map;

public final class From_A_Secret_ROLE_A extends AnB_Protocol<From_A_Secret_Steps,From_A_Secret_Roles> {

	private static boolean loop = false;
	private static long sessionID = 0;

	// local knowledge - constants
	
	// local vars
	private Crypto_ByteArray Msg = null;
	
	
	public From_A_Secret_ROLE_A(From_A_Secret_Roles role, String name, String sharepath) {
		super();
		this.role = role;
		this.name = name;
		this.sharepath = sharepath;
		if (sessionID < Integer.MAX_VALUE) {
			sessionID++;
		}
	}

	protected void init() {
		// init shared vars
		};

	public void run(Map<String, AnB_Session> lbs, Map<String, String> aliases) {

		this.aliases = aliases;
		
		AnB_Session ROLE_A_channel_ROLE_B = lbs.get("ROLE_B");
		

			try {
				ROLE_A_channel_ROLE_B.Open();
				
				init();
				
				do {
					executeStep(ROLE_A_channel_ROLE_B, From_A_Secret_Steps.STEP_0);
					
				} while (loop);
				
				ROLE_A_channel_ROLE_B.Close();
				
				
			} catch (ClassCastException e) {
				AnBx_Debug.out(layer, "Message format type error - Program will be terminated!");
				e.printStackTrace();
				System.out.println(0);
			} catch (Exception e) {
				AnBx_Debug.out(layer, "Generic error - Program will be terminated!");
				e.printStackTrace();
				System.out.println(0);
			}
	};

	protected void executeStep(AnB_Session s, From_A_Secret_Steps step) {

		status(step);

		switch (step) {
		
		case STEP_0:
			
			Msg = s.getNonce();
			
			s.Send(s.encrypt(s.sign(new AnBx_Params(aliases.get("ROLE_B"),Msg)),aliases.get("ROLE_B")));

			break;

		
		default:
			break;		
		}

		status(step);

	}

	

	
	

}
